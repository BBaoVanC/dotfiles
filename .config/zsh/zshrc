#!/bin/zsh

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi


# ==> Environment
source ~/.zprofile

HISTFILE="${XDG_DATA_HOME:-$HOME/.local/share}/zsh_history"
SAVEHIST=500
source ~/.config/zsh/aliasrc
[ -f ~/.config/zsh/zshrc_nosync ] && source ~/.config/zsh/zshrc_nosync
command -v podman &> /dev/null && export DOCKER_HOST="unix://$XDG_RUNTIME_DIR/podman/podman.sock"

# ==> Fix Ctrl-O keybind on macOS
[ "$(uname -s)" = "Darwin" ] && stty discard undef > /dev/null 2>&1


# ==> Use emacs (default) keybinds instead of vi mode
# vim automatically guesses you want vi mode based on $EDITOR
bindkey -e


# ==> Fix keys using terminfo :: https://wiki.archlinux.org/title/Zsh#Key_bindings
typeset -g -A key

key[Home]="${terminfo[khome]}"
key[End]="${terminfo[kend]}"
key[Insert]="${terminfo[kich1]}"
key[Backspace]="${terminfo[kbs]}"
key[Delete]="${terminfo[kdch1]}"
key[Up]="${terminfo[kcuu1]}"
key[Down]="${terminfo[kcud1]}"
key[Left]="${terminfo[kcub1]}"
key[Right]="${terminfo[kcuf1]}"
key[PageUp]="${terminfo[kpp]}"
key[PageDown]="${terminfo[knp]}"
key[Shift-Tab]="${terminfo[kcbt]}"

# setup key accordingly
[[ -n "${key[Home]}"      ]] && bindkey -- "${key[Home]}"       beginning-of-line
[[ -n "${key[End]}"       ]] && bindkey -- "${key[End]}"        end-of-line
[[ -n "${key[Insert]}"    ]] && bindkey -- "${key[Insert]}"     overwrite-mode
[[ -n "${key[Backspace]}" ]] && bindkey -- "${key[Backspace]}"  backward-delete-char
[[ -n "${key[Delete]}"    ]] && bindkey -- "${key[Delete]}"     delete-char
[[ -n "${key[Up]}"        ]] && bindkey -- "${key[Up]}"         up-line-or-history
[[ -n "${key[Down]}"      ]] && bindkey -- "${key[Down]}"       down-line-or-history
[[ -n "${key[Left]}"      ]] && bindkey -- "${key[Left]}"       backward-char
[[ -n "${key[Right]}"     ]] && bindkey -- "${key[Right]}"      forward-char
[[ -n "${key[PageUp]}"    ]] && bindkey -- "${key[PageUp]}"     beginning-of-buffer-or-history
[[ -n "${key[PageDown]}"  ]] && bindkey -- "${key[PageDown]}"   end-of-buffer-or-history
[[ -n "${key[Shift-Tab]}" ]] && bindkey -- "${key[Shift-Tab]}"  reverse-menu-complete

# Finally, make sure the terminal is in application mode, when zle is
# active. Only then are the values from $terminfo valid.
if (( ${+terminfo[smkx]} && ${+terminfo[rmkx]} )); then
	autoload -Uz add-zle-hook-widget
	function zle_application_mode_start { echoti smkx }
	function zle_application_mode_stop { echoti rmkx }
	add-zle-hook-widget -Uz zle-line-init zle_application_mode_start
	add-zle-hook-widget -Uz zle-line-finish zle_application_mode_stop
fi


# ==> OSC 7 so foot can open in working directory
# https://codeberg.org/dnkl/foot/wiki#user-content-spawning-new-terminal-instances-in-the-current-working-directory
function osc7 {
    local LC_ALL=C
    export LC_ALL

    setopt localoptions extendedglob
    input=( ${(s::)PWD} )
    uri=${(j::)input/(#b)([^A-Za-z0-9_.\!~*\'\(\)-\/])/%${(l:2::0:)$(([##16]#match))}}
    print -n "\e]7;file://${HOSTNAME}${uri}\e\\"
}
add-zsh-hook -Uz chpwd osc7


# runs before prompt
function precmd {
    # ==> https://codeberg.org/dnkl/foot/wiki#jumping-between-prompts
    print -Pn "\e]133;A\e\\"
    echo -ne "\033]0;$(pwd | sed -e "s;^$HOME;~;") — $TERM\a"
}

# runs before command (after enter)
function preexec {
    echo -ne "\033]0;$1 — $TERM\a"
}


# ==> ssh-agent (for macos)
if [ "$(hostname)" = "bbaobook" ]; then
  unset SSH_AUTH_SOCK
  unset SSH_ASKPASS
  if ! pgrep -u "$USER" ssh-agent > /dev/null; then
    ssh-agent -t 24h > "$XDG_CACHE_HOME/ssh-agent.env"
  fi
  if [ -z "$SSH_AUTH_SOCK" ]; then
    source "$XDG_CACHE_HOME/ssh-agent.env" > /dev/null
  fi
fi


# ==> Automatically install Antibody
[ ! -d ~/.local/bin/antibody/ ] && mkdir -p ~/.local/bin/antibody/
[ ! -f ~/.local/bin/antibody/antibody ] && curl -sfL git.io/antibody | sh -s - -b ~/.local/bin/antibody


# ==> Antibody
source <(antibody init)
antibody bundle < ~/.config/zsh/plugins.txt
# because of zsh-completions
autoload -U compinit && compinit


# ==> Load powerlevel10k
# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.config/zsh/p10k.zsh ]] || source ~/.config/zsh/p10k.zsh

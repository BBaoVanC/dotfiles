#!/bin/zsh
# vim: foldmethod=marker

autoload -U add-zsh-hook

# Environment {{{
source ~/.zprofile
source ~/.config/zsh/aliasrc
HISTFILE="${XDG_DATA_HOME:-$HOME/.local/share}/zsh_history"
SAVEHIST=500
[ -f ~/.config/zsh/zshrc_nosync ] && source ~/.config/zsh/zshrc_nosync
# }}}

# Keybinds {{{

# Use emacs (default) keybinds instead of vi mode
# vim automatically guesses you want vi mode based on $EDITOR
bindkey -e

# Fix keys using terminfo {{{
# https://wiki.archlinux.org/title/Zsh#Key_bindings
typeset -g -A key

key[Home]="${terminfo[khome]}"
key[End]="${terminfo[kend]}"
key[Insert]="${terminfo[kich1]}"
key[Backspace]="${terminfo[kbs]}"
key[Delete]="${terminfo[kdch1]}"
key[Up]="${terminfo[kcuu1]}"
key[Down]="${terminfo[kcud1]}"
key[Left]="${terminfo[kcub1]}"
key[Right]="${terminfo[kcuf1]}"
key[PageUp]="${terminfo[kpp]}"
key[PageDown]="${terminfo[knp]}"
key[Shift-Tab]="${terminfo[kcbt]}"

# setup key accordingly
[[ -n "${key[Home]}"      ]] && bindkey -- "${key[Home]}"       beginning-of-line
[[ -n "${key[End]}"       ]] && bindkey -- "${key[End]}"        end-of-line
[[ -n "${key[Insert]}"    ]] && bindkey -- "${key[Insert]}"     overwrite-mode
[[ -n "${key[Backspace]}" ]] && bindkey -- "${key[Backspace]}"  backward-delete-char
[[ -n "${key[Delete]}"    ]] && bindkey -- "${key[Delete]}"     delete-char
[[ -n "${key[Up]}"        ]] && bindkey -- "${key[Up]}"         up-line-or-history
[[ -n "${key[Down]}"      ]] && bindkey -- "${key[Down]}"       down-line-or-history
[[ -n "${key[Left]}"      ]] && bindkey -- "${key[Left]}"       backward-char
[[ -n "${key[Right]}"     ]] && bindkey -- "${key[Right]}"      forward-char
[[ -n "${key[PageUp]}"    ]] && bindkey -- "${key[PageUp]}"     beginning-of-buffer-or-history
[[ -n "${key[PageDown]}"  ]] && bindkey -- "${key[PageDown]}"   end-of-buffer-or-history
[[ -n "${key[Shift-Tab]}" ]] && bindkey -- "${key[Shift-Tab]}"  reverse-menu-complete

# Finally, make sure the terminal is in application mode, when zle is
# active. Only then are the values from $terminfo valid.
if (( ${+terminfo[smkx]} && ${+terminfo[rmkx]} )); then
    autoload -Uz add-zle-hook-widget
    function zle_application_mode_start { echoti smkx }
    function zle_application_mode_stop { echoti rmkx }
    add-zle-hook-widget -Uz zle-line-init zle_application_mode_start
    add-zle-hook-widget -Uz zle-line-finish zle_application_mode_stop
fi
# }}}

# Disable flow control (so history-search-forward works)
stty -ixon

# Parity with bash {{{
# Full list: https://gist.github.com/tuxfight3r/60051ac67c5f0445efee
bindkey '^U' backward-kill-line
# }}}

# }}}

# Terminal integrations {{{

# OSC 7 so foot can open in working directory {{{
# https://codeberg.org/dnkl/foot/wiki#user-content-spawning-new-terminal-instances-in-the-current-working-directory
function osc7 {
    local LC_ALL=C
    export LC_ALL

    setopt localoptions extendedglob
    input=( ${(s::)PWD} )
    uri=${(j::)input/(#b)([^A-Za-z0-9_.\!~*\'\(\)-\/])/%${(l:2::0:)$(([##16]#match))}}
    print -n "\e]7;file://${HOSTNAME}${uri}\e\\"
}
add-zsh-hook chpwd osc7
# }}}

# foot: Jump between prompts {{{
# https://codeberg.org/dnkl/foot/wiki#jumping-between-prompts
function precmd_foot_jumping_between_prompts {
    print -Pn "\e]133;A\e\\"
}
add-zsh-hook precmd precmd_foot_jumping_between_prompts
# }}}

# Window title {{{
# set window title when at prompt
function window_title_prompt {
    echo -ne "\033]0;$(pwd | sed -e "s;^$HOME;~;") — $TERM\a"
}
add-zsh-hook precmd window_title_prompt
# set window title when executing program
function window_title_executing {
    echo -ne "\033]0;$1 — $TERM\a"
}
add-zsh-hook preexec window_title_executing
# }}}

# }}}

# Misc patches {{{

# ssh-agent (for macos) {{{
if [ "$(hostname)" = "bbaobook" ]; then
    unset SSH_AUTH_SOCK
    unset SSH_ASKPASS
    if ! pgrep -u "$USER" ssh-agent > /dev/null; then
        ssh-agent -t 24h > "$XDG_CACHE_HOME/ssh-agent.env"
    fi
    if [ -z "$SSH_AUTH_SOCK" ]; then
        source "$XDG_CACHE_HOME/ssh-agent.env" > /dev/null
    fi
fi
#}}}

# Fix Ctrl-O keybind on macOS {{{
[ "$(uname -s)" = "Darwin" ] && stty discard undef > /dev/null 2>&1
# }}}

# }}}

# Antibody {{{

# Automatically install Antibody {{{
[ ! -d ~/.local/bin/antibody/ ] && mkdir -p ~/.local/bin/antibody/
[ ! -f ~/.local/bin/antibody/antibody ] && curl -sfL git.io/antibody | sh -s - -b ~/.local/bin/antibody
# }}}

# Antibody run & load {{{
source <(antibody init)
antibody bundle < ~/.config/zsh/plugins.txt
# because of zsh-completions
autoload -U compinit && compinit
# }}}

# }}}

# Load powerlevel10k {{{
# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[ -f ~/.config/zsh/p10k.zsh ] && source ~/.config/zsh/p10k.zsh
# }}}

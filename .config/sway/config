# `man 5 sway`

### Variables

# Mod4 = Super; Mod1 = Alt
set $mod Mod4

# Arrows
set $left h
set $down j
set $up k
set $right l

# Preferred programs
set $term kitty
# NOTE: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu-app wofi --show drun | xargs swaymsg exec --
# TODO: figure out a way to allow typing in command manually and running it
set $menu-command wofi --show run | xargs swaymsg exec --

### Startup

# make sure that WAYLAND_DISPLAY is set, so xdg-desktop-portal starts successfully
exec dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY SWAYSOCK XDG_CURRENT_DESKTOP
exec nm-applet --indicator
exec polkit-dumb-agent
exec kdeconnect-indicator
# dunst is started by systemd automatically when a notification is first sent
# ---
# https://github.com/swaywm/sway/wiki/GTK-3-settings-on-Wayland
# TODO: cursor is blurry in gtk apps
exec_always import-gsettings

set $WOBSOCK $XDG_RUNTIME_DIR/wob.sock
set $SOVSOCK $XDG_RUNTIME_DIR/sov.sock
exec rm -f $WOBSOCK && mkfifo $WOBSOCK && tail -f $WOBSOCK | wob
exec rm -f $SOVSOCK && mkfifo $SOVSOCK && tail -f $SOVSOCK | sov

### Monitor layout & setup

# computer-specific monitor config
#   it has a single `include` command in the file which loads one of my configs
#   this is so I can have my configs in the repo without conflicting between pcs
include ~/.config/sway/monitor

### Idle configuration

# Example configuration
#   This will lock your screen after 300 seconds of inactivity, then turn off
#   your displays after another 300 seconds, and turn your screens back on when
#   resumed. It will also lock your screen before your computer goes to sleep.
exec swayidle -w \
    timeout 300 'swaymsg "output * dpms off"' \
        resume 'swaymsg "output * dpms on"' \
    timeout 310 'swaylock -f' \
    lock 'swaylock -f' \
    unlock 'killall -SIGUSR1 swaylock' \
    before-sleep 'swaylock -f' \
    idlehint 300

### Input configuration

# `man 5 sway-input`
input {
    type:keyboard {
        xkb_layout us
        xkb_variant altgr-intl
        # https://bugzilla.mozilla.org/show_bug.cgi?id=1652820
        # this causes a firefox crash on reload
        xkb_numlock true

        repeat_delay 300
        repeat_rate 50
    }

    type:pointer {
        accel_profile flat
    }
}

### Aesthetics

gaps inner 8

seat seat0 xcursor_theme Vimix-white-cursors 24

# 
# Wallpaper
#
# TODO: find a new one instead of recycling the same one from last year
output * bg ~/wallpaper fill

#
# Status Bar
#
# `man 5 sway-bar`
# `man 5 waybar`
bar {
    swaybar_command waybar
}

### Window Rules

# help identify XWayland windows
for_window [shell=".*"] title_format "%title :: %shell"

### Key bindings

#
# Basics
#

# Start a terminal
bindsym $mod+Return exec $term

# Kill focused window
bindsym $mod+Shift+c kill

# Start your launcher
bindsym $mod+d exec $menu-app
bindsym $mod+Shift+d exec $menu-command

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

# Reload the configuration file
bindsym $mod+q reload

# Exit sway (logs you out of your Wayland session)
bindsym $mod+Shift+q exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
bindsym Mod1+Mod4+Shift+q exec swaymsg exit

# Lock screen
bindsym Mod1+Mod4+l exec swaylock -f

#
# Moving around
#

# Move your focus around
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right
# Or use $mod+[up|down|left|right]
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# Move the focused window with the same, but add Shift
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right
# Ditto, with arrow keys
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

#
# Workspaces
#

# Overview
bindsym --no-repeat $mod+F1 exec echo 1 > $SOVSOCK
bindsym --release $mod+F1 exec echo 0 > $SOVSOCK

# Switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8
bindsym $mod+9 workspace number 9
bindsym $mod+0 workspace number 10
# Move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number 1
bindsym $mod+Shift+2 move container to workspace number 2
bindsym $mod+Shift+3 move container to workspace number 3
bindsym $mod+Shift+4 move container to workspace number 4
bindsym $mod+Shift+5 move container to workspace number 5
bindsym $mod+Shift+6 move container to workspace number 6
bindsym $mod+Shift+7 move container to workspace number 7
bindsym $mod+Shift+8 move container to workspace number 8
bindsym $mod+Shift+9 move container to workspace number 9
bindsym $mod+Shift+0 move container to workspace number 10
# NOTE: workspaces can have any name you want, not just numbers.

# Rename workspace
bindsym $mod+Shift+r exec swaymsg rename workspace to "$(swaymsg -t get_workspaces | jq -r '.[] | select(.focused).num') $(wofi --show dmenu)"

#
# Layout stuff
#

# You can "split" the current object of your focus with
# $mod+b or $mod+v, for horizontal and vertical splits
# respectively.
bindsym $mod+b splith
bindsym $mod+v splitv
bindsym $mod+n split none

# Switch the current container between different layout styles
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# Make the current focus fullscreen
bindsym $mod+f fullscreen

# Toggle the current focus between tiling and floating mode
bindsym $mod+Shift+space floating toggle

# Swap focus between the tiling area and the floating area
bindsym $mod+space focus mode_toggle

# Move focus to the parent container
bindsym $mod+a focus parent

# Toggle waybar
bindsym $mod+Shift+b exec killall -SIGUSR1 waybar
# Reload waybar
bindsym Mod1+Mod4+b exec killall -SIGUSR2 waybar

#
# Notifications
#

# Close last notification
bindsym $mod+escape exec dunstctl close
# Close all notifications
bindsym $mod+Shift+escape exec dunstctl close-all
# Go through notification history
bindsym $mod+grave exec dunstctl history-pop
# Click notification (perform action)
bindsym $mod+comma exec dunstctl action
# Open notification context menu
bindsym $mod+period exec dunstctl context

# TODO: https://wiki.archlinux.org/title/sway#Control_swaynag_with_the_keyboard

#
# Media keys
#

# Volume +/-
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5% && pactl get-sink-volume @DEFAULT_SINK@ | head -n 1| awk '{print substr($5, 1, length($5)-1)}' > $WOBSOCK
bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5% && pactl get-sink-volume @DEFAULT_SINK@ | head -n 1 | awk '{print substr($5, 1, length($5)-1)}' > $WOBSOCK
# Mute
bindsym XF86AudioMute exec pamixer --toggle-mute && ( [ "$(pamixer --get-mute)" = "true" ] && echo 0 > $WOBSOCK ) || pamixer --get-volume > $WOBSOCK

# Brightness TODO
#bindsym XF86MonBrightnessDown exec brightnessctl set 5%- | sed -En 's/.*\(([0-9]+)%\).*/\1/p' > $WOBSOCK
#bindsym XF86MonBrightnessUp exec brightnessctl set +5% | sed -En 's/.*\(([0-9]+)%\).*/\1/p' > $WOBSOCK

# Player
bindsym --locked XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

# Search (who even has this)
bindsym XF86Search exec $menu

#
# Clipboard
#

# TODO: https://github.com/yory8/clipman
# https://wiki.archlinux.org/title/sway#Clipboard

#
# Screenshot
#

bindsym Print exec grimshot --notify copy area
bindsym ctrl+Print exec grimshot --notify copy active
bindsym Shift+Print exec grimshot --notify copy output
bindsym ctrl+Shift+Print exec grimshot --notify copy screen

#
# Scratchpad
#

# Sway has a "scratchpad", which is a bag of holding for windows.
# You can send windows there and get them back later.

# Move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show

#
# Resizing containers
#

mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Move all workspace windows
#

set $mode_move_all_workspace_windows "Move all workspace windows to [0-9]?"
mode $mode_move_all_workspace_windows {
    bindsym 1 [workspace=".*"] move to workspace 1; workspace number 1, mode "default"
    bindsym 2 [workspace=".*"] move to workspace 2; workspace number 2, mode "default"
    bindsym 3 [workspace=".*"] move to workspace 3; workspace number 3, mode "default"
    bindsym 4 [workspace=".*"] move to workspace 4; workspace number 4, mode "default"
    bindsym 5 [workspace=".*"] move to workspace 5; workspace number 5, mode "default"
    bindsym 6 [workspace=".*"] move to workspace 6; workspace number 6, mode "default"
    bindsym 7 [workspace=".*"] move to workspace 7; workspace number 7, mode "default"
    bindsym 8 [workspace=".*"] move to workspace 8; workspace number 8, mode "default"
    bindsym 9 [workspace=".*"] move to workspace 9; workspace number 9, mode "default"
    bindsym 0 [workspace=".*"] move to workspace 10; workspace number 10, mode "default"
    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+shift+ctrl+m mode $mode_move_all_workspace_windows

#
# Passthrough mode (for programs that conflict with WM keybinds)
# 

mode "passthrough" {
    bindsym $mod+Shift+p mode "default"
}
bindsym $mod+p mode "passthrough"

include /etc/sway/config.d/*
